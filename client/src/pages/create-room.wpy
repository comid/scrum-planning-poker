<style lang="less">
input,
textarea {
  width: 100%;
  padding: 16rpx 0;
  font-size: 34rpx;
}

.textarea-wrp,
.input-wrp {
  background-color: #fff;
  border: 2rpx solid #d8d8d8;
}

.input-wrp {
  padding: 0 25rpx;
}

.textarea-wrp {
  padding: 0 15rpx;
}

.switch-wrp {
  display: flex;
  margin-bottom: 20rpx;
  font-size: 34rpx;
  line-height: 40rpx;
  align-items: center;
}

.switch-wrp__bd {
  flex: 1;
}

.page-section-title-desc {
  color: #757475;
  font-size: 24rpx;
  display: inline-block;
}

.textarea-add-story {
  color: #0678c1;
  font-size: 24rpx;
  line-height: 68rpx;
  text-decoration: underline;
  display: inline-block;
}
</style>
<template>
  <view class="container">
    <view class="page-body">
      <form @submit="formSubmit">
        <view class="page-section-title">{{t.room_name}}</view>
        <view class="page-section">
          <view class="page-section-spacing">
            <view class="input-wrp">
              <input name="room" @blur="onRoomBlur" value="{{room}}" />
            </view>
          </view>
        </view>
        <view class="page-section-title">
          {{t.story}}
          <view class="page-section-title-desc">*{{t.story_desc}}</view>
        </view>
        <!-- <view class="page-section-title">Put your stories text here. Each line contains new story.</view> -->
        <view class="page-section">
          <view class="page-section-spacing">
            <view class="textarea-wrp">
              <textarea name="stories" auto-height value="{{stories}}" @blur="onStoriesBlur" maxlength="-1" />
            </view>
            <view class="textarea-add-story" @tap="onAddStoryTap">
              {{t.add_story}}
            </view>
          </view>
        </view>
        <view class="page-section">
          <view class="page-section-spacing">
            <view class="switch-wrp">
              <view class="switch-wrp__bd">{{t.need_score}}</view>
              <view class="switch-wrp__ft">
                <switch name="needScore" color="#0678C1" checked></switch>
              </view>
            </view>
            <view class="switch-wrp">
              <view class="switch-wrp__bd">{{t.is_noymous}}</view>
              <view class="switch-wrp__ft">
                <switch name="isNoymous" color="#0678C1"></switch>
              </view>
            </view>
          </view>
        </view>
        <view class="btn-area">
          <button type="primary" formType="submit" loading="{{submitting}}">{{t.create_button}}</button>
        </view>
      </form>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy';
import LocalesMixin from '@/mixins/locales-mixin';
import LoginMixin from '@/mixins/login-mixin';
import T from '@/utils/i18n';
import { formatNumber } from '@/utils/utils';

const now = new Date();
const year = now.getFullYear();
const month = now.getMonth() + 1;
const day = now.getDate();
const initRoom = `${T._('common.room')} ${[year, month, day]
  .map(formatNumber)
  .join('.')}`;

const initStories = new Array(3)
  .fill(null)
  .map((n, i) => `${T._('common.story')} ${formatNumber(i + 1)}`)
  .join('\n');

export default class CreateRoom extends wepy.page {
  data = {
    submitting: false,
    room: initRoom,
    stories: initStories
  };

  mixins = [LocalesMixin, LoginMixin];

  watch = {
    t() {
      wepy.setNavigationBarTitle({ title: this.t.title });
    }
  };

  methods = {
    onRoomBlur(e) {
      const { value } = e.detail;
      if (!value || !/\w+/.test(value)) {
        this.room = initRoom;
      } else {
        this.room = value;
      }
    },
    onStoriesBlur(e) {
      const { value } = e.detail;
      if (!value || !/\w+/.test(value)) {
        this.stories = initStories;
      } else {
        this.stories = value;
      }
    },
    onAddStoryTap() {
      const { length } = this.stories.split('\n');
      this.stories += `\n${T._('common.story')} ${formatNumber(length + 1)}`;
    },
    async formSubmit(e) {
      if (this.submitting) return;
      this.submitting = true;
      const { room: name, stories, needScore, isNoymous } = e.detail.value;
      if (name) {
        const data = await wepy.request({
          url: '/rooms',
          method: 'POST',
          data: {
            name,
            stories: stories
              .split('\n')
              .map(name => name.trim())
              .filter(n => n)
              .map(name => ({ name })),
            options: {
              needScore,
              isNoymous,
              calcMethod: 0
            }
          }
        });
        if (data) {
          this.$redirect(`room?id=${data.id}`);
        }
        this.submitting = false;
        this.$apply();
      }
    }
  };
}
</script>
